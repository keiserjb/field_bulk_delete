<?php
 /**
  @file
  Primary hook implementations for Field Bulk Delete.
 /

/**
 * Implements hook_help().
 */
function field_bulk_delete_help($path, $arg) {
 if ($path == 'admin/help#field_bulk_delete') {
    return '<p>' . t('The Metatag module provides a options to let each page have customized meta data added to the "meta" tags in the HEAD section of the document.') . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function field_bulk_delete_permission() {
  $permissions['administer field delete'] = array(
    'title' => t('Administer field delete'),
    'restrict access' => TRUE,
    'description' => t("Access to delete field's and field values."),
  );
  return $permissions;
}
/**
 * Implements hook_menu().
 */
function field_bulk_delete_menu() {
  $items = array();
  $items['admin/config/content/field_bulk_delete'] = array(
    'title' => 'Field Bulk Delete',
    'description' => 'Field Bulk Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('field_bulk_delete_admin'),
    'access arguments' => array('administer field_bulk_delete settings'),
    'type' => MENU_NORMAL_ITEM,
   );
   return $items;
}
/**
 * Implements hook_form().
 */
function field_bulk_delete_admin($form, &$form_state) {
  $form = array();
  $selected = '';
  $entity_options = _get_entity_type_list_options();
  $entity_selected = isset($form_state['values']['entity_type']) ? $form_state['values']['entity_type'] : key($entity_options);
  $selected = isset($form_state['values']['bundle']) ? $form_state['values']['bundle'] : '_none';
  $form['entity_type'] = array(
    '#type' => 'select',
    '#title' => t('Select entity type'),
    '#options'=> $entity_options,
    '#default_value' => $entity_selected,
    '#required' => TRUE,
    '#ajax' => array(     
      'callback' => 'entity_list_dependent_dropdown_callback',
      'wrapper' => 'dropdown-first-replace',
    ),
  );
  $form['bundle'] = array(
    '#type' => 'select',
    '#title' => t('Select bundle'),
    '#options'=>  _get_bundle_list_options($entity_selected),
    '#required' => TRUE,
    '#prefix' => '<div id="dropdown-first-replace">',
    '#suffix' => '</div>',
    '#ajax' => array(     
      'callback' => 'field_list_dependent_dropdown_callback',
      'wrapper' => 'dropdown-second-replace',
    ),
  );
  $form['field_list'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Field List'),
    '#required' => TRUE,
    '#prefix' => '<div id="dropdown-second-replace">',
    '#suffix' => '</div>',
    '#options' => _field_list_dependent_options($entity_selected, $selected),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}
/**
 * Get the list of entity type().
 */
function _get_entity_type_list_options() {
  $entity_types = field_info_bundles();
  $options = array('_none' => '--Select--');
  foreach ($entity_types as $key => $value) {	
  	$options[$key] = $key;
  }
  return $options;
}
/**
 * Get the list of bundle.
 */
function _get_bundle_list_options($entity_selected = '') {
	$entity_options = array();
	$entity_options = array('all' => 'All');
	if (!empty($entity_selected) && ($entity_selected != '_none')) {
		$entity_types = field_info_bundles();
		 foreach ($entity_types[$entity_selected] as $key => $value) {	
  			$entity_options[$key] = $value['label'];
  		 }
  }
  return $entity_options;
}
/**
 * Callback function for field list field.
 */
function field_list_dependent_dropdown_callback($form, &$form_state) {
  return $form['field_list'];
}
/**
 * Callback function for bundle and field list field.
 */
function entity_list_dependent_dropdown_callback($form, &$form_state) {
  return array(
    '#type' => 'ajax',
    '#commands' => array(
      ajax_command_replace("#dropdown-first-replace", render($form['bundle'])),
      ajax_command_replace("#dropdown-second-replace", render($form['field_list'])),
    ),
  );
}
/**
 * Get the list of field names.
 */
function _field_list_dependent_options($entity_selected = '', $bundle = '') {
  $options = array();
  if (!empty($entity_selected) && ($entity_selected != '_none')) {
    $fields_info = field_info_instances($entity_selected);
      if ($bundle == 'all') {
        foreach ($fields_info as $fields => $values) {
          foreach ($values as $field => $key) {
          $options[$field] = $key['label'];
          }
        }
      } 
      elseif ($bundle != '_none') {
        $fields_list = $fields_info[$bundle];
        foreach ($fields_list as $fields => $values) {
          $options[$fields] = $values['label'];
        }
      }
  }
  if (isset($options)) {
    return $options;
  }
  else {
    return array();
  }
}
/**
 * Submit handler for field_bulk_delete_admin().
 */
function field_bulk_delete_admin_submit($form, &$form_state) {
  $entity_type = isset($form_state['values']['entity_type']) ? $form_state['values']['entity_type'] : '';
  $bundle = isset($form_state['values']['bundle']) ? $form_state['values']['bundle'] : '';
  $field_list = isset($form_state['values']['field_list']) ? $form_state['values']['field_list'] : array();
  foreach ($field_list as $field_name) {
    if ($bundle != 'all') {
      if (!empty($entity_type) && !empty($field_name) && !empty($bundle)) {
        if ($instance = field_info_instance($entity_type, $field_name, $bundle)) {	
          field_delete_instance($instance);
          drupal_set_message(t('Deleted the %field_name field from %bundle.', array('%field_name' => $field_name, '%bundle' => $bundle)), 'status');
          watchdog('field_bulk_delete', 'Deleted the %field_name field from %bundle.', array('%field_name' => $field_name, '%bundle' => $bundle));   	
        }
        else {
          drupal_set_message(t('Somthing went wrong1, Please check.'), 'error');
        }
      }
    }
    else {
      if (!empty($entity_type) && !empty($field_name) && $bundle == 'all') {
        if (field_info_field($field_name)) {
          field_delete_field($field_name);
          drupal_set_message(t('Deleted the %field_name field from all instances.', array('%field_name' => $field_name)), 'status');
          watchdog('field_bulk_delete', 'Deleted the %field_name field from all instances.', array('%field_name' => $field_name));
        }
        else {
          drupal_set_message(t('Somthing went wrong2, Please check.'), 'error');
        }
      }
    }
    field_purge_batch(count($field_list));
  }
}
